<Window x:Class="JsonFormat.View.SettingWindow"
        x:ClassModifier="internal"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:JsonFormat.View"
        xmlns:converter="clr-namespace:JsonFormat.Converter"
        xmlns:util="clr-namespace:JsonFormat.Util"
        Title="设置" SizeToContent="WidthAndHeight" ResizeMode="NoResize" Background="#1E1E1E">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/JsonFormat;component/Style/ComboBox.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <Thickness x:Key="SettingClassWithContentMargin" Left="0" Top="0" Right="0" Bottom="5"/>
            <Thickness x:Key="SettingClassWithClassMargin" Left="0" Top="0" Right="0" Bottom="20"/>
            <Thickness x:Key="SettingItemHorizontalMargin" Left="20" Top="0" Right="0" Bottom="0"/>

            <Style x:Key="SettingClassTextStyle" TargetType="TextBlock">
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="FontWeight" Value="Bold"/>
            </Style>
            <Style x:Key="SettingItemNameTextStyle" TargetType="TextBlock">
                <Setter Property="Foreground" Value="DarkGray"/>
                <Setter Property="FontWeight" Value="Bold"/>
                <Setter Property="Margin" Value="0,0,0,5"/>
            </Style>
            <Style x:Key="SettingClassDecoratorStyle" TargetType="Border">
                <Setter Property="Height" Value="1"/>
                <Setter Property="Background" Value="#2A2A2A"/>
                <Setter Property="SnapsToDevicePixels" Value="True"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="Margin" Value="5,0,0,0"/>
            </Style>

            <converter:TextFontFamilyConverter x:Key="TextFontFamilyConverter"/>
            <ControlTemplate x:Key="FontFamiliesTemplate" TargetType="ComboBox">
                <Grid ToolTip="{TemplateBinding SelectionBoxItem}">
                    <ToggleButton IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}" Cursor="Hand" FocusVisualStyle="{x:Null}">
                        <ToggleButton.Template>
                            <ControlTemplate TargetType="ToggleButton">
                                <Border x:Name="MainBorder" CornerRadius="4" Background="White">
                                    <Path x:Name="ToggleIcon" Data="M0,0 L5,5 10,0" Stroke="RoyalBlue" StrokeThickness="1" Margin="0,0,8,0" HorizontalAlignment="Right" VerticalAlignment="Center">
                                        <Path.RenderTransform>
                                            <RotateTransform x:Name="Rotate" Angle="0" CenterX="5" CenterY="2.5"/>
                                        </Path.RenderTransform>
                                    </Path>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter TargetName="MainBorder" Property="Background" Value="Gainsboro"/>
                                    </Trigger>
                                    <Trigger Property="IsChecked" Value="True">
                                        <Setter TargetName="MainBorder" Property="Background" Value="Gainsboro"/>
                                    </Trigger>
                                    <EventTrigger RoutedEvent="ToggleButton.Checked">
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="Rotate" Storyboard.TargetProperty="Angle" To="180" Duration="0:0:0.2"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger>
                                    <EventTrigger RoutedEvent="ToggleButton.Unchecked">
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="Rotate" Storyboard.TargetProperty="Angle" To="0" Duration="0:0:0.2"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </ToggleButton.Template>
                    </ToggleButton>
                    <TextBlock Text="{TemplateBinding Text}" FontFamily="{TemplateBinding SelectionBoxItem,Converter={StaticResource TextFontFamilyConverter}}" HorizontalAlignment="Left" Margin="10,0,26,0" VerticalAlignment="Center" IsHitTestVisible="False" TextTrimming="CharacterEllipsis"/>
                    <Popup IsOpen="{TemplateBinding IsDropDownOpen}" Placement="Bottom" Focusable="False" AllowsTransparency="True" PopupAnimation="Slide" HorizontalOffset="-8" VerticalOffset="-6">
                        <Grid>
                            <Border Margin="8" CornerRadius="4" Background="White">
                                <Border.Effect>
                                    <DropShadowEffect ShadowDepth="0" BlurRadius="8" Color="Black" Opacity="0.4"/>
                                </Border.Effect>
                            </Border>
                            <ScrollViewer Width="{TemplateBinding ActualWidth}" MaxHeight="500" Margin="8,16" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" CanContentScroll="False" Style="{StaticResource ScrollViewerStyle}">
                                <StackPanel IsItemsHost="True"/>
                            </ScrollViewer>
                        </Grid>
                    </Popup>
                </Grid>
            </ControlTemplate>
            <Style x:Key="FontFamiliesItemStyle" TargetType="ComboBoxItem">
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="Height" Value="26"/>
                <Setter Property="Background" Value="White"/>
                <Setter Property="Foreground" Value="Black"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ComboBoxItem">
                            <Border Width="{TemplateBinding ActualWidth}" Background="{TemplateBinding Background}" ToolTip="{TemplateBinding Content}">
                                <TextBlock Text="{TemplateBinding Content}" FontFamily="{TemplateBinding Content,Converter={StaticResource TextFontFamilyConverter}}" Foreground="{TemplateBinding Foreground}" Margin="10,0" TextTrimming="CharacterEllipsis" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="Gainsboro"/>
                                </Trigger>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Background" Value="#BCBCBC"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="ColorTextBoxStyle" TargetType="TextBox">
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="Height" Value="26"/>
                <Setter Property="MaxLength" Value="9"/>
                <Setter Property="MinWidth" Value="85"/>
                <Setter Property="InputMethod.IsInputMethodEnabled" Value="False"/>
                <Setter Property="Validation.ErrorTemplate" Value="{x:Null}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TextBox">
                            <Grid>
                                <Border x:Name="MainBorder" CornerRadius="4" Background="White" BorderBrush="Transparent" BorderThickness="2"/>
                                <ScrollViewer x:Name="PART_ContentHost" Margin="7,0" VerticalAlignment="Center"/>
                                <Canvas>
                                    <Border x:Name="ErrorTip" Canvas.Top="28" Visibility="Collapsed" CornerRadius="4" Background="Red">
                                        <TextBlock Text="无效的颜色值" Foreground="White" Margin="10,5"/>
                                    </Border>
                                </Canvas>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="MainBorder" Property="BorderBrush" Value="RoyalBlue"/>
                                </Trigger>
                                <Trigger Property="IsFocused" Value="True">
                                    <Setter TargetName="MainBorder" Property="BorderBrush" Value="RoyalBlue"/>
                                </Trigger>
                                <Trigger Property="Validation.HasError" Value="True">
                                    <Setter TargetName="ErrorTip" Property="Visibility" Value="Visible"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Opacity" Value="0.5"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Window.Resources>

    <StackPanel Margin="20">
        <!--字体-->
        <DockPanel Margin="{StaticResource SettingClassWithContentMargin}">
            <TextBlock DockPanel.Dock="Left" Text="字体" Style="{StaticResource SettingClassTextStyle}"/>
            <Border Style="{StaticResource SettingClassDecoratorStyle}"/>
        </DockPanel>
        <StackPanel Orientation="Horizontal" Margin="{StaticResource SettingClassWithClassMargin}">
            <StackPanel>
                <TextBlock Text="字体类型" Style="{StaticResource SettingItemNameTextStyle}"/>
                <ComboBox ItemsSource="{Binding FontFamilies,Mode=OneTime}" SelectedItem="{Binding SelectedFontFamily,Mode=TwoWay}" Style="{StaticResource ComboBoxStyle}" Template="{StaticResource FontFamiliesTemplate}" ItemContainerStyle="{StaticResource FontFamiliesItemStyle}"/>
            </StackPanel>
            <StackPanel Margin="{StaticResource SettingItemHorizontalMargin}">
                <TextBlock Text="字体大小" Style="{StaticResource SettingItemNameTextStyle}"/>
                <ComboBox ItemsSource="{Binding FontSizes,Mode=OneTime}" SelectedItem="{Binding SelectedFontSize,Mode=TwoWay}" Style="{StaticResource ComboBoxStyle}"/>
            </StackPanel>
        </StackPanel>

        <!--缩进-->
        <DockPanel Margin="{StaticResource SettingClassWithContentMargin}">
            <TextBlock DockPanel.Dock="Left" Text="缩进" Style="{StaticResource SettingClassTextStyle}"/>
            <Border Style="{StaticResource SettingClassDecoratorStyle}"/>
        </DockPanel>
        <StackPanel Margin="{StaticResource SettingClassWithClassMargin}">
            <StackPanel HorizontalAlignment="Left">
                <TextBlock Text="缩进空格数" Style="{StaticResource SettingItemNameTextStyle}"/>
                <ComboBox ItemsSource="{Binding IndentSpaceCounts,Mode=OneTime}" SelectedItem="{Binding SelectedIndentSpaceCount,Mode=TwoWay}" Style="{StaticResource ComboBoxStyle}"/>
            </StackPanel>
        </StackPanel>

        <!--高亮颜色-->
        <DockPanel Margin="{StaticResource SettingClassWithContentMargin}">
            <TextBlock DockPanel.Dock="Left" Text="高亮颜色" Style="{StaticResource SettingClassTextStyle}"/>
            <Border Style="{StaticResource SettingClassDecoratorStyle}"/>
        </DockPanel>
        <WrapPanel Margin="{StaticResource SettingClassWithClassMargin}">
            <Border Background="#555" CornerRadius="4">
                <StackPanel Margin="10">
                    <TextBlock Text="字符颜色" Style="{StaticResource SettingItemNameTextStyle}"/>
                    <TextBox Style="{StaticResource ColorTextBoxStyle}">
                        <TextBox.Text>
                            <Binding Path="CharColor" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <util:ColorValidationRule ValidatesOnTargetUpdated="True"/>
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                        <!--restore setting saved color when lost focus-->
                    </TextBox>
                </StackPanel>
            </Border>
            
        </WrapPanel>

        <!--底部-->
        <StackPanel Orientation="Horizontal">
            <Button Width="80" Height="26" Content="应用" Command="{Binding ApplySettingsCommand,Mode=OneTime}"/>
            <Button Width="100" Height="26" Content="恢复默认设置" Margin="20,0,0,0" Command="{Binding RestoreSettingsCommand,Mode=OneTime}"/>
        </StackPanel>
    </StackPanel>
</Window>
